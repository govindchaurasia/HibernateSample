/**
 * 
 */
package com.interactcrm.qstats.classes;

import java.io.File;
import java.io.FileInputStream;

import java.io.InputStream;

import java.util.Properties;

import com.interactcrm.qstats.startup.TenantGroupObj;

import com.interactcrm.qstats.threads.VoiceFetcher;
import com.interactcrm.qstats.threads.VoiceProcessor;
import com.interactcrm.utils.Utility;

/**
 * @author Ramkumar R
 * 
 */
public class VoiceQueueStatManager implements IQueueStatsManager {

	private int queueGroup;
	private int channelId;
	private int tgId;
	private int fetcher_Sleeptime = 15;
	private int processor_Sleeptime = 15;

	public VoiceQueueStatManager(int channelId, int queueGroup, int tgId) {
		this.queueGroup = queueGroup;
		this.channelId = channelId;
		this.tgId = tgId;
		InputStream in	=	null;
		Properties push	=	new Properties();
		try {
			 in	=	new FileInputStream(Utility.getAppHome() + File.separator + "SleepInterval.properties");
			 push.load(in);
			 fetcher_Sleeptime	=	Integer.parseInt(push.getProperty("Fetcher."+ channelId + ".Sleeptime"));
			 processor_Sleeptime	=	Integer.parseInt(push.getProperty("Processor."+ channelId + ".Sleeptime"));
		} catch (Exception e) {
			
			e.printStackTrace();
		}	
		/*ResourceBundle rb = ResourceBundle.getBundle("SleepInterval");
		fetcher_Sleeptime = Integer.parseInt(rb.getString("Fetcher."
				+ channelId + ".Sleeptime"));
		processor_Sleeptime = Integer.parseInt(rb.getString("Processor."
				+ channelId + ".Sleeptime"));*/
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.interactcrm.qstats.classes.IQueueStatsManager#startProcessing()
	 */
	@Override
	public void startProcessing(TenantGroupObj tenantGrpObj) {
		new Thread(new VoiceProcessor(channelId, tgId, queueGroup,
				processor_Sleeptime,tenantGrpObj)).start();
	}
	
	/*
	 * (non-Javadoc)
	 * 
	 * @see com.interactcrm.qstats.classes.IQueueStatsManager#startFetching()
	 */
	@Override
	public void startFetching(TenantGroupObj tenantGrpObj) {
		new Thread(new VoiceFetcher(channelId, tgId, queueGroup,fetcher_Sleeptime,tenantGrpObj)).start();
	}

}
